trigger:
  branches:
    include:
      - main  # Trigger pipeline for changes to the "main" branch

pool:
  vmImage: 'ubuntu-latest'  # Use Ubuntu as the build agent

variables:
  buildConfiguration: 'Release'  # Specify build configuration
  appName: 'MyJavaApp'           # Application name
  system.debug: true             # Enable debug mode for detailed logs

timeoutInMinutes: 120  # Increase timeout to prevent premature job termination

steps:
- checkout: self  # Ensure the repository is checked out

- script: |
    echo "Debugging Workspace..."
    echo "Listing contents of $(System.DefaultWorkingDirectory):"
    ls -la $(System.DefaultWorkingDirectory)
  displayName: 'Debug Workspace Contents'

- task: Maven@3  # Use Maven to build your Java application
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    options: '-DskipTests'  # Optional: Skip tests during the build if needed

- script: |
    echo "Listing target folder contents..."
    ls -la $(System.DefaultWorkingDirectory)/target
  displayName: 'Verify Build Output'

- task: PublishBuildArtifacts@1  # Publish the built artifact (e.g., .jar file)
  inputs:
    pathToPublish: '$(System.DefaultWorkingDirectory)/target/*.jar'
    artifactName: 'java-artifact'

- script: |
    echo "Debugging Artifact Staging Directory..."
    echo "Listing contents of $(Build.ArtifactStagingDirectory):"
    ls -la $(Build.ArtifactStagingDirectory)
  displayName: 'Verify Artifact Publishing'

- task: AzureWebApp@1  # Deploy to Azure Web App using service connection
  inputs:
    azureSubscription: 'java-service-connection'  # Service connection name
    appName: $(appName)
    package: '$(Build.ArtifactStagingDirectory)/java-artifact.jar'

- script: |
    echo "Deploying application..."
    echo "Deployment process completed successfully!"
  displayName: 'Deploy Application'
